apply plugin: 'com.android.application'

def getReleaseVersionCode() {

    def versionPropsFile = file('version.properties')
    def version = 1040

    Properties versionProps = new Properties()

    def runTasks = gradle.startParameter.taskNames
    if (versionPropsFile.canRead()) {
        versionProps.load(new FileInputStream(versionPropsFile))
        version = versionProps['VERSION_CODE'].toInteger()
    }
    if (':app:assembleRelease' in runTasks) {
        version = version + 1
        versionProps['VERSION_CODE'] = version.toString()
        versionProps.store(versionPropsFile.newWriter(), null)
    }
    return version
}

def getReleaseVersion() {

    def versionPropsFile = file('version.properties')
    def ver = "1.04.0"

    Properties versionProps = new Properties()

    def runTasks = gradle.startParameter.taskNames
    if (versionPropsFile.canRead()) {
        versionProps.load(new FileInputStream(versionPropsFile))
        ver = versionProps['VERSION'].toString()
    }
    return ver
}

def signing = null

def propFile = file('../signing.properties')
if (propFile.canRead()) {
    def Properties props = new Properties()

    def is = new FileInputStream(propFile);
    props.load(is)
    is.close()

    android {
        signingConfigs {
            app {
                keyAlias props['KEY_ALIAS']
                keyPassword props['KEY_PASSWORD']
                storeFile file(props['STORE_FILE'])
                storePassword props['STORE_PASSWORD']
                v2SigningEnabled false
            }
        }
    }

    signing = android.signingConfigs.app
}

android {
    def code = getReleaseVersionCode()
    def ver = getReleaseVersion()

    compileSdkVersion 28
    defaultConfig {
        applicationId "com.github.aarcangeli.serioussamandroid"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode code
        versionName ver
        setProperty("archivesBaseName", "SeriousSamAndroid-$versionName")
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        externalNativeBuild {
            cmake {
                cppFlags "-fexceptions"
                abiFilters "x86", "armeabi-v7a"
                arguments "-DSSA_VERSION=" + versionName
            }
        }
    }
    buildTypes {
        debug {
            if (signing) {
                signingConfig signing
            }
            debuggable true
            jniDebuggable true
        }
        release {
            if (signing) {
                signingConfig signing
            }
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "../CMakeLists.txt"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'org.greenrobot:eventbus:3.1.1'
    implementation 'com.hold1:keyboardheightprovider:0.0.9'
}
